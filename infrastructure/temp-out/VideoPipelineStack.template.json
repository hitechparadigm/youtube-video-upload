{
 "Description": "Automated YouTube Video Pipeline Infrastructure",
 "Resources": {
  "PrimaryBucket2E757879": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "automated-video-pipeline-v2-786673323159-us-east-1",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 1
       },
       "ExpirationInDays": 7,
       "Id": "AutoDeleteAfter7Days",
       "Status": "Enabled"
      }
     ]
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/PrimaryBucket/Resource"
   }
  },
  "BackupBucket26B8E51C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "automated-video-pipeline-backup-v2-786673323159-us-west-2",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/BackupBucket/Resource"
   }
  },
  "TopicsTableB8A0263C": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "topicId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     },
     {
      "AttributeName": "priority",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "StatusIndex",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "priority",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "topicId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "automated-video-pipeline-topics-v2",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/TopicsTable/Resource"
   }
  },
  "VideosTable19B3D0C4": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "videoId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "videoId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "automated-video-pipeline-production-v2",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideosTable/Resource"
   }
  },
  "ExecutionsTableA2EE59C2": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "executionId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "executionId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "automated-video-pipeline-executions-v2",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/ExecutionsTable/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream",
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTasks",
        "ecs:RunTask",
        "polly:DescribeVoices",
        "polly:SynthesizeSpeech",
        "rekognition:DetectLabels",
        "rekognition:DetectText",
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject",
        "secretsmanager:GetSecretValue",
        "states:DescribeExecution",
        "states:ListExecutions",
        "states:StartExecution",
        "states:StopExecution"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ConfigLayer1A4B087F": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "nodejs20.x"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "6cbd6c36eff6225d00758983cec0028638fd58cd9b03ba8a393dd7d5ccbcc895.zip"
    },
    "Description": "Shared configuration management layer",
    "LayerName": "automated-video-pipeline-config"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/ConfigLayer/Resource",
    "aws:asset:path": "asset.6cbd6c36eff6225d00758983cec0028638fd58cd9b03ba8a393dd7d5ccbcc895",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "TopicManagementFunctionC81B46F7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "bc2459fd4bea3da96feb5ac1797c52f4664180ed6e6e1fb387169db5c35cf08a.zip"
    },
    "Environment": {
     "Variables": {
      "TOPICS_TABLE_NAME": {
       "Ref": "TopicsTableB8A0263C"
      },
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-topic-management-v2",
    "Handler": "handler.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/TopicManagementFunction/Resource",
    "aws:asset:path": "asset.bc2459fd4bea3da96feb5ac1797c52f4664180ed6e6e1fb387169db5c35cf08a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ScriptGeneratorFunction7EE3FEE4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "238a0850cec58e564ffb2c68b5e32c852950009dcd37af98b777aa8ef4ee108b.zip"
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "BEDROCK_MODEL_ID": "anthropic.claude-3-sonnet-20240229-v1:0",
      "BEDROCK_MODEL_REGION": "us-east-1",
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-script-generator-v2",
    "Handler": "handler.handler",
    "Layers": [
     {
      "Ref": "ConfigLayer1A4B087F"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/ScriptGeneratorFunction/Resource",
    "aws:asset:path": "asset.238a0850cec58e564ffb2c68b5e32c852950009dcd37af98b777aa8ef4ee108b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MediaCuratorFunction9523771D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "3830673111c3505c61326c94acbc3d06c553c26f9c1f65eefb5eb557c2b65373.zip"
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "API_KEYS_SECRET_NAME": "automated-video-pipeline/api-keys",
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-media-curator-v2",
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 600
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/MediaCuratorFunction/Resource",
    "aws:asset:path": "asset.3830673111c3505c61326c94acbc3d06c553c26f9c1f65eefb5eb557c2b65373",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AudioGeneratorFunction17C7247E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "36cf0f1710133ba613db8db3e33ee8af8ff4a8e26d1e5e9d88aa29777f532791.zip"
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-audio-generator-v2",
    "Handler": "handler.handler",
    "Layers": [
     {
      "Ref": "ConfigLayer1A4B087F"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/AudioGeneratorFunction/Resource",
    "aws:asset:path": "asset.36cf0f1710133ba613db8db3e33ee8af8ff4a8e26d1e5e9d88aa29777f532791",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "VideoAssemblerFunction398C3D15": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "c0062530e20ae578d65b459b997fad05af3783fc40f65928fdb55d703cc7e8e6.zip"
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "VIDEOS_TABLE_NAME": {
       "Ref": "VideosTable19B3D0C4"
      },
      "ECS_CLUSTER_NAME": "automated-video-pipeline-cluster",
      "ECS_TASK_DEFINITION": "video-processor-task",
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-video-assembler-v2",
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoAssemblerFunction/Resource",
    "aws:asset:path": "asset.c0062530e20ae578d65b459b997fad05af3783fc40f65928fdb55d703cc7e8e6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "YouTubePublisherFunction16400ECB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "3ababb34df338dab94ec79e88d6b63d5a10096be78d40b567b100500ebaba495.zip"
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "PrimaryBucket2E757879"
      },
      "VIDEOS_TABLE_NAME": {
       "Ref": "VideosTable19B3D0C4"
      },
      "YOUTUBE_SECRET_NAME": "automated-video-pipeline/youtube-credentials",
      "NODE_ENV": "production"
     }
    },
    "FunctionName": "automated-video-pipeline-youtube-publisher-v2",
    "Handler": "handler.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/YouTubePublisherFunction/Resource",
    "aws:asset:path": "asset.3ababb34df338dab94ec79e88d6b63d5a10096be78d40b567b100500ebaba495",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WorkflowOrchestratorFunction392225F6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-786673323159-us-east-1",
     "S3Key": "47c03f9ad5dcf0f78950a4ead8083e1828f6ab5422e99ba9a693343cc63449b9.zip"
    },
    "Environment": {
     "Variables": {
      "EXECUTIONS_TABLE_NAME": {
       "Ref": "ExecutionsTableA2EE59C2"
      },
      "TOPICS_TABLE_NAME": {
       "Ref": "TopicsTableB8A0263C"
      },
      "NODE_ENV": "production",
      "STATE_MACHINE_ARN": {
       "Ref": "VideoPipelineStateMachine25F8993E"
      }
     }
    },
    "FunctionName": "automated-video-pipeline-workflow-orchestrator-v2",
    "Handler": "handler.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/WorkflowOrchestratorFunction/Resource",
    "aws:asset:path": "asset.47c03f9ad5dcf0f78950a4ead8083e1828f6ab5422e99ba9a693343cc63449b9",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "StepFunctionsRole575CBBE2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/StepFunctionsRole/Resource"
   }
  },
  "StepFunctionsRoleDefaultPolicy14E0B433": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AudioGeneratorFunction17C7247E",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MediaCuratorFunction9523771D",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ScriptGeneratorFunction7EE3FEE4",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "VideoAssemblerFunction398C3D15",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "YouTubePublisherFunction16400ECB",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StepFunctionsRoleDefaultPolicy14E0B433",
    "Roles": [
     {
      "Ref": "StepFunctionsRole575CBBE2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/StepFunctionsRole/DefaultPolicy/Resource"
   }
  },
  "VideoPipelineStateMachine25F8993E": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\r\n  \"Comment\": \"Automated Video Pipeline - End-to-End Workflow\",\r\n  \"StartAt\": \"InitializePipeline\",\r\n  \"States\": {\r\n    \"InitializePipeline\": {\r\n      \"Type\": \"Pass\",\r\n      \"Comment\": \"Initialize pipeline with input validation and setup\",\r\n      \"Parameters\": {\r\n        \"pipelineId.$\": \"$.topicId\",\r\n        \"topic.$\": \"$.topic\",\r\n        \"keywords.$\": \"$.keywords\",\r\n        \"priority.$\": \"$.priority\",\r\n        \"targetDuration\": 480,\r\n        \"startTime.$\": \"$$.State.EnteredTime\",\r\n        \"status\": \"initialized\"\r\n      },\r\n      \"Next\": \"GenerateTrendAnalysis\"\r\n    },\r\n\r\n    \"GenerateTrendAnalysis\": {\r\n      \"Type\": \"Task\",\r\n      \"Comment\": \"Analyze trends and generate specific video concepts\",\r\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n      \"Parameters\": {\r\n        \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "ScriptGeneratorFunction7EE3FEE4",
         "Arn"
        ]
       },
       "\",\r\n        \"Payload\": {\r\n          \"baseTopic.$\": \"$.topic\",\r\n          \"keywords.$\": \"$.keywords\",\r\n          \"targetAudience\": \"general\",\r\n          \"region\": \"US\",\r\n          \"analysisDepth\": \"comprehensive\"\r\n        }\r\n      },\r\n      \"ResultPath\": \"$.trendAnalysis\",\r\n      \"ResultSelector\": {\r\n        \"trendData.$\": \"$.Payload\"\r\n      },\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n          \"IntervalSeconds\": 5,\r\n          \"MaxAttempts\": 3,\r\n          \"BackoffRate\": 2.0\r\n        }\r\n      ],\r\n      \"Catch\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.ALL\"],\r\n          \"Next\": \"HandleTrendAnalysisError\",\r\n          \"ResultPath\": \"$.error\"\r\n        }\r\n      ],\r\n      \"Next\": \"GenerateEngagingScript\"\r\n    },\r\n\r\n    \"HandleTrendAnalysisError\": {\r\n      \"Type\": \"Pass\",\r\n      \"Comment\": \"Handle trend analysis errors with fallback\",\r\n      \"Parameters\": {\r\n        \"trendAnalysis\": {\r\n          \"trendData\": {\r\n            \"baseTopic.$\": \"$.topic\",\r\n            \"generatedVideoTopics\": [\r\n              {\r\n                \"specificTopic.$\": \"$.topic\",\r\n                \"trendScore\": 75,\r\n                \"keywords.$\": \"$.keywords\",\r\n                \"reasoning\": \"Fallback topic generation due to trend analysis failure\"\r\n              }\r\n            ],\r\n            \"hotKeywords.$\": \"$.keywords\"\r\n          }\r\n        },\r\n        \"error.$\": \"$.error\"\r\n      },\r\n      \"Next\": \"GenerateEngagingScript\"\r\n    },\r\n\r\n    \"GenerateEngagingScript\": {\r\n      \"Type\": \"Task\",\r\n      \"Comment\": \"Create engaging video script with hooks and retention tactics\",\r\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n      \"Parameters\": {\r\n        \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "ScriptGeneratorFunction7EE3FEE4",
         "Arn"
        ]
       },
       "\",\r\n        \"Payload\": {\r\n          \"specificTopic.$\": \"$.trendAnalysis.trendData.generatedVideoTopics[0].specificTopic\",\r\n          \"trendAnalysis.$\": \"$.trendAnalysis.trendData\",\r\n          \"targetDuration.$\": \"$.targetDuration\",\r\n          \"targetAudience\": \"general\",\r\n          \"contentStyle\": \"engaging_educational\"\r\n        }\r\n      },\r\n      \"ResultPath\": \"$.scriptGeneration\",\r\n      \"ResultSelector\": {\r\n        \"scriptData.$\": \"$.Payload\"\r\n      },\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n          \"IntervalSeconds\": 5,\r\n          \"MaxAttempts\": 3,\r\n          \"BackoffRate\": 2.0\r\n        }\r\n      ],\r\n      \"Catch\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.ALL\"],\r\n          \"Next\": \"HandleScriptGenerationError\",\r\n          \"ResultPath\": \"$.error\"\r\n        }\r\n      ],\r\n      \"Next\": \"ParallelMediaAndAudio\"\r\n    },\r\n\r\n    \"HandleScriptGenerationError\": {\r\n      \"Type\": \"Fail\",\r\n      \"Comment\": \"Script generation is critical - fail the pipeline\",\r\n      \"Cause\": \"Script generation failed\",\r\n      \"Error\": \"ScriptGenerationError\"\r\n    },\r\n\r\n    \"ParallelMediaAndAudio\": {\r\n      \"Type\": \"Parallel\",\r\n      \"Comment\": \"Process media curation and audio generation in parallel\",\r\n      \"Branches\": [\r\n        {\r\n          \"StartAt\": \"CurateMediaAssets\",\r\n          \"States\": {\r\n            \"CurateMediaAssets\": {\r\n              \"Type\": \"Task\",\r\n              \"Comment\": \"Find and download relevant media assets\",\r\n              \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n              \"Parameters\": {\r\n                \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "MediaCuratorFunction9523771D",
         "Arn"
        ]
       },
       "\",\r\n                \"Payload\": {\r\n                  \"script.$\": \"$.scriptGeneration.scriptData\",\r\n                  \"trendAnalysis.$\": \"$.trendAnalysis.trendData\",\r\n                  \"videoDuration.$\": \"$.targetDuration\",\r\n                  \"targetQuality\": \"1080p\"\r\n                }\r\n              },\r\n              \"ResultSelector\": {\r\n                \"mediaAssets.$\": \"$.Payload\"\r\n              },\r\n              \"Retry\": [\r\n                {\r\n                  \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n                  \"IntervalSeconds\": 10,\r\n                  \"MaxAttempts\": 3,\r\n                  \"BackoffRate\": 2.0\r\n                }\r\n              ],\r\n              \"End\": true\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"StartAt\": \"GenerateAudio\",\r\n          \"States\": {\r\n            \"GenerateAudio\": {\r\n              \"Type\": \"Task\",\r\n              \"Comment\": \"Convert script to high-quality audio\",\r\n              \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n              \"Parameters\": {\r\n                \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "AudioGeneratorFunction17C7247E",
         "Arn"
        ]
       },
       "\",\r\n                \"Payload\": {\r\n                  \"scriptText.$\": \"$.scriptGeneration.scriptData.engagingScript.scenes\",\r\n                  \"voiceSettings\": {\r\n                    \"voiceId\": \"Joanna\",\r\n                    \"engine\": \"neural\",\r\n                    \"outputFormat\": \"mp3\"\r\n                  },\r\n                  \"outputLocation.$\": \"States.Format('s3://automated-video-pipeline-786673323159-us-east-1/audio/{}-narration.mp3', $.pipelineId)\"\r\n                }\r\n              },\r\n              \"ResultSelector\": {\r\n                \"audioFile.$\": \"$.Payload\"\r\n              },\r\n              \"Retry\": [\r\n                {\r\n                  \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n                  \"IntervalSeconds\": 10,\r\n                  \"MaxAttempts\": 3,\r\n                  \"BackoffRate\": 2.0\r\n                }\r\n              ],\r\n              \"End\": true\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"ResultPath\": \"$.parallelResults\",\r\n      \"Catch\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.ALL\"],\r\n          \"Next\": \"HandleParallelProcessingError\",\r\n          \"ResultPath\": \"$.error\"\r\n        }\r\n      ],\r\n      \"Next\": \"AssembleVideo\"\r\n    },\r\n\r\n    \"HandleParallelProcessingError\": {\r\n      \"Type\": \"Fail\",\r\n      \"Comment\": \"Media or audio generation failed\",\r\n      \"Cause\": \"Parallel processing failed\",\r\n      \"Error\": \"ParallelProcessingError\"\r\n    },\r\n\r\n    \"AssembleVideo\": {\r\n      \"Type\": \"Task\",\r\n      \"Comment\": \"Combine media assets with audio using FFmpeg\",\r\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n      \"Parameters\": {\r\n        \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "VideoAssemblerFunction398C3D15",
         "Arn"
        ]
       },
       "\",\r\n        \"Payload\": {\r\n          \"videoId.$\": \"$.pipelineId\",\r\n          \"scriptData.$\": \"$.scriptGeneration.scriptData\",\r\n          \"mediaAssets.$\": \"$.parallelResults[0].mediaAssets.selectedAssets\",\r\n          \"audioFile.$\": \"$.parallelResults[1].audioFile.audioFileLocation\",\r\n          \"outputOptions\": {\r\n            \"resolution\": \"1920x1080\",\r\n            \"fps\": 30,\r\n            \"bitrate\": \"5000k\",\r\n            \"format\": \"mp4\"\r\n          }\r\n        }\r\n      },\r\n      \"ResultPath\": \"$.videoAssembly\",\r\n      \"ResultSelector\": {\r\n        \"assemblyResult.$\": \"$.Payload\"\r\n      },\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n          \"IntervalSeconds\": 30,\r\n          \"MaxAttempts\": 2,\r\n          \"BackoffRate\": 2.0\r\n        }\r\n      ],\r\n      \"Catch\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.ALL\"],\r\n          \"Next\": \"HandleVideoAssemblyError\",\r\n          \"ResultPath\": \"$.error\"\r\n        }\r\n      ],\r\n      \"Next\": \"PublishToYouTube\"\r\n    },\r\n\r\n    \"HandleVideoAssemblyError\": {\r\n      \"Type\": \"Fail\",\r\n      \"Comment\": \"Video assembly failed\",\r\n      \"Cause\": \"Video assembly failed\",\r\n      \"Error\": \"VideoAssemblyError\"\r\n    },\r\n\r\n    \"PublishToYouTube\": {\r\n      \"Type\": \"Task\",\r\n      \"Comment\": \"Upload video to YouTube with optimized metadata\",\r\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\r\n      \"Parameters\": {\r\n        \"FunctionName\": \"",
       {
        "Fn::GetAtt": [
         "YouTubePublisherFunction16400ECB",
         "Arn"
        ]
       },
       "\",\r\n        \"Payload\": {\r\n          \"videoId.$\": \"$.pipelineId\",\r\n          \"videoFilePath.$\": \"$.videoAssembly.assemblyResult.outputLocation\",\r\n          \"title.$\": \"$.scriptGeneration.scriptData.clickWorthyMetadata.title\",\r\n          \"description.$\": \"$.scriptGeneration.scriptData.clickWorthyMetadata.description\",\r\n          \"tags.$\": \"$.scriptGeneration.scriptData.clickWorthyMetadata.tags\",\r\n          \"thumbnail.$\": \"$.scriptGeneration.scriptData.clickWorthyMetadata.thumbnail.s3Location\",\r\n          \"privacy\": \"public\",\r\n          \"category\": \"22\"\r\n        }\r\n      },\r\n      \"ResultPath\": \"$.youtubePublish\",\r\n      \"ResultSelector\": {\r\n        \"publishResult.$\": \"$.Payload\"\r\n      },\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.TaskFailed\", \"States.Timeout\"],\r\n          \"IntervalSeconds\": 60,\r\n          \"MaxAttempts\": 3,\r\n          \"BackoffRate\": 2.0\r\n        }\r\n      ],\r\n      \"Catch\": [\r\n        {\r\n          \"ErrorEquals\": [\"States.ALL\"],\r\n          \"Next\": \"HandleYouTubePublishError\",\r\n          \"ResultPath\": \"$.error\"\r\n        }\r\n      ],\r\n      \"Next\": \"CompletePipeline\"\r\n    },\r\n\r\n    \"HandleYouTubePublishError\": {\r\n      \"Type\": \"Pass\",\r\n      \"Comment\": \"YouTube publish failed but video is assembled - partial success\",\r\n      \"Parameters\": {\r\n        \"status\": \"partial_success\",\r\n        \"message\": \"Video assembled successfully but YouTube publish failed\",\r\n        \"videoLocation.$\": \"$.videoAssembly.assemblyResult.outputLocation\",\r\n        \"error.$\": \"$.error\"\r\n      },\r\n      \"Next\": \"CompletePipeline\"\r\n    },\r\n\r\n    \"CompletePipeline\": {\r\n      \"Type\": \"Pass\",\r\n      \"Comment\": \"Complete pipeline with final results\",\r\n      \"Parameters\": {\r\n        \"pipelineId.$\": \"$.pipelineId\",\r\n        \"topic.$\": \"$.topic\",\r\n        \"status\": \"completed\",\r\n        \"startTime.$\": \"$.startTime\",\r\n        \"endTime.$\": \"$$.State.EnteredTime\",\r\n        \"results\": {\r\n          \"trendAnalysis.$\": \"$.trendAnalysis.trendData\",\r\n          \"scriptGeneration.$\": \"$.scriptGeneration.scriptData\",\r\n          \"mediaAssets.$\": \"$.parallelResults[0].mediaAssets\",\r\n          \"audioGeneration.$\": \"$.parallelResults[1].audioFile\",\r\n          \"videoAssembly.$\": \"$.videoAssembly.assemblyResult\",\r\n          \"youtubePublish.$\": \"$.youtubePublish.publishResult\"\r\n        },\r\n        \"metrics\": {\r\n          \"totalCost\": 0.85,\r\n          \"videoQuality\": \"high\",\r\n          \"estimatedViews.$\": \"$.scriptGeneration.scriptData.engagementMetrics.predictedWatchTime\"\r\n        }\r\n      },\r\n      \"End\": true\r\n    }\r\n  }\r\n}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "StepFunctionsRole575CBBE2",
      "Arn"
     ]
    },
    "StateMachineName": "automated-video-pipeline-state-machine",
    "StateMachineType": "STANDARD",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "DependsOn": [
    "StepFunctionsRoleDefaultPolicy14E0B433",
    "StepFunctionsRole575CBBE2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineStateMachine/Resource"
   }
  },
  "VideoPipelineAPIC7F4C465": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for Automated Video Pipeline",
    "Name": "automated-video-pipeline-api",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Resource"
   }
  },
  "VideoPipelineAPIDeploymentC06F0BD86f20880a655f49fd9e5bf8ad9f7d30eb": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for Automated Video Pipeline",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "DependsOn": [
    "VideoPipelineAPImediacurateOPTIONS86FC4F7E",
    "VideoPipelineAPImediacuratePOSTE36DB332",
    "VideoPipelineAPImediacurateCF64791B",
    "VideoPipelineAPImediaOPTIONS8E5C0B35",
    "VideoPipelineAPImedia35396386",
    "VideoPipelineAPImediasearchOPTIONS834783F5",
    "VideoPipelineAPImediasearchPOST31739D32",
    "VideoPipelineAPImediasearchB1B7B691",
    "VideoPipelineAPIOPTIONS051F5B63",
    "VideoPipelineAPItopicstopicIdDELETE93A7005B",
    "VideoPipelineAPItopicstopicIdGET36FA6D5F",
    "VideoPipelineAPItopicstopicIdOPTIONS2872CA4C",
    "VideoPipelineAPItopicstopicIdPUT204A3495",
    "VideoPipelineAPItopicstopicId877F6683",
    "VideoPipelineAPItopicsGETDC1EB2B9",
    "VideoPipelineAPItopicsOPTIONSEFA954B9",
    "VideoPipelineAPItopicsPOST1FB44524",
    "VideoPipelineAPItopicsF8A446F2",
    "VideoPipelineAPIvideoassembleOPTIONSAC256661",
    "VideoPipelineAPIvideoassemblePOSTE138099D",
    "VideoPipelineAPIvideoassemble41D0E80E",
    "VideoPipelineAPIvideoOPTIONS18D47EDD",
    "VideoPipelineAPIvideopublishOPTIONSA418EEFD",
    "VideoPipelineAPIvideopublishPOST5FA37B80",
    "VideoPipelineAPIvideopublishA7E982F4",
    "VideoPipelineAPIvideo0162E1A2",
    "VideoPipelineAPIworkflowlistGETDAF77427",
    "VideoPipelineAPIworkflowlistOPTIONSFBF7273A",
    "VideoPipelineAPIworkflowlistBEC1493C",
    "VideoPipelineAPIworkflowOPTIONS8E75EF14",
    "VideoPipelineAPIworkflow192CC401",
    "VideoPipelineAPIworkflowstartOPTIONS63B12E62",
    "VideoPipelineAPIworkflowstartPOST3A7F2933",
    "VideoPipelineAPIworkflowstartF33177E5",
    "VideoPipelineAPIworkflowstatsGETD619E2C8",
    "VideoPipelineAPIworkflowstatsOPTIONSE598E4C5",
    "VideoPipelineAPIworkflowstats8D21DFA1",
    "VideoPipelineAPIworkflowstatusGET5B5181D0",
    "VideoPipelineAPIworkflowstatusOPTIONS56C8F8AD",
    "VideoPipelineAPIworkflowstatus28E8494B"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "VideoPipelineAPIDeploymentStageprod938D37FF": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "VideoPipelineAPIDeploymentC06F0BD86f20880a655f49fd9e5bf8ad9f7d30eb"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    },
    "StageName": "prod",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/DeploymentStage.prod/Resource"
   }
  },
  "VideoPipelineAPIOPTIONS051F5B63": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "VideoPipelineAPIC7F4C465",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPItopicsF8A446F2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VideoPipelineAPIC7F4C465",
      "RootResourceId"
     ]
    },
    "PathPart": "topics",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/Resource"
   }
  },
  "VideoPipelineAPItopicsOPTIONSEFA954B9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicsF8A446F2"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPItopicsGETApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071GETtopics6A7A52EB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/GET/topics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/GET/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..topics"
   }
  },
  "VideoPipelineAPItopicsGETApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071GETtopics02793EB0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/GET/topics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/GET/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..topics"
   }
  },
  "VideoPipelineAPItopicsGETDC1EB2B9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TopicManagementFunctionC81B46F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicsF8A446F2"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/GET/Resource"
   }
  },
  "VideoPipelineAPItopicsPOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTtopics6FD0CF6B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/topics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..topics"
   }
  },
  "VideoPipelineAPItopicsPOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTtopics735AC9CB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/topics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..topics"
   }
  },
  "VideoPipelineAPItopicsPOST1FB44524": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TopicManagementFunctionC81B46F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicsF8A446F2"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/POST/Resource"
   }
  },
  "VideoPipelineAPItopicstopicId877F6683": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPItopicsF8A446F2"
    },
    "PathPart": "{topicId}",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/Resource"
   }
  },
  "VideoPipelineAPItopicstopicIdOPTIONS2872CA4C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicstopicId877F6683"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPItopicstopicIdGETApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071GETtopicstopicId1CBBF071": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/GET/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/GET/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdGETApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071GETtopicstopicId9CE259C1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/GET/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/GET/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdGET36FA6D5F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TopicManagementFunctionC81B46F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicstopicId877F6683"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/GET/Resource"
   }
  },
  "VideoPipelineAPItopicstopicIdPUTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071PUTtopicstopicIdEDC85D3A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/PUT/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/PUT/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.PUT..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdPUTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071PUTtopicstopicIdCB134112": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/PUT/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/PUT/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.PUT..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdPUT204A3495": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TopicManagementFunctionC81B46F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicstopicId877F6683"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/PUT/Resource"
   }
  },
  "VideoPipelineAPItopicstopicIdDELETEApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071DELETEtopicstopicIdF7982D1E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/DELETE/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/DELETE/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.DELETE..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdDELETEApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071DELETEtopicstopicId72D28D78": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TopicManagementFunctionC81B46F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/DELETE/topics/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/DELETE/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.DELETE..topics.{topicId}"
   }
  },
  "VideoPipelineAPItopicstopicIdDELETE93A7005B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TopicManagementFunctionC81B46F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPItopicstopicId877F6683"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/topics/{topicId}/DELETE/Resource"
   }
  },
  "VideoPipelineAPIworkflow192CC401": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VideoPipelineAPIC7F4C465",
      "RootResourceId"
     ]
    },
    "PathPart": "workflow",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/Resource"
   }
  },
  "VideoPipelineAPIworkflowOPTIONS8E75EF14": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflow192CC401"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIworkflowstartF33177E5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIworkflow192CC401"
    },
    "PathPart": "start",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/start/Resource"
   }
  },
  "VideoPipelineAPIworkflowstartOPTIONS63B12E62": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstartF33177E5"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/start/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIworkflowstartPOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTworkflowstartDEABAC79": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/workflow/start"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/start/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..workflow.start"
   }
  },
  "VideoPipelineAPIworkflowstartPOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTworkflowstart8F5931BB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/workflow/start"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/start/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..workflow.start"
   }
  },
  "VideoPipelineAPIworkflowstartPOST3A7F2933": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WorkflowOrchestratorFunction392225F6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstartF33177E5"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/start/POST/Resource"
   }
  },
  "VideoPipelineAPIworkflowstatus28E8494B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIworkflow192CC401"
    },
    "PathPart": "status",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/status/Resource"
   }
  },
  "VideoPipelineAPIworkflowstatusOPTIONS56C8F8AD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstatus28E8494B"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/status/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIworkflowstatusGETApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowstatus363B0AB2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/GET/workflow/status"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/status/GET/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.status"
   }
  },
  "VideoPipelineAPIworkflowstatusGETApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowstatus3C4930E0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/GET/workflow/status"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/status/GET/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.status"
   }
  },
  "VideoPipelineAPIworkflowstatusGET5B5181D0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WorkflowOrchestratorFunction392225F6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstatus28E8494B"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/status/GET/Resource"
   }
  },
  "VideoPipelineAPIworkflowlistBEC1493C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIworkflow192CC401"
    },
    "PathPart": "list",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/list/Resource"
   }
  },
  "VideoPipelineAPIworkflowlistOPTIONSFBF7273A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowlistBEC1493C"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/list/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIworkflowlistGETApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowlist1D237F53": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/GET/workflow/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/list/GET/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.list"
   }
  },
  "VideoPipelineAPIworkflowlistGETApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowlist1C2D2DE2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/GET/workflow/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/list/GET/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.list"
   }
  },
  "VideoPipelineAPIworkflowlistGETDAF77427": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WorkflowOrchestratorFunction392225F6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowlistBEC1493C"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/list/GET/Resource"
   }
  },
  "VideoPipelineAPIworkflowstats8D21DFA1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIworkflow192CC401"
    },
    "PathPart": "stats",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/stats/Resource"
   }
  },
  "VideoPipelineAPIworkflowstatsOPTIONSE598E4C5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstats8D21DFA1"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/stats/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIworkflowstatsGETApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowstats964DC393": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/GET/workflow/stats"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/stats/GET/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.stats"
   }
  },
  "VideoPipelineAPIworkflowstatsGETApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071GETworkflowstats8F372989": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/GET/workflow/stats"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/stats/GET/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.GET..workflow.stats"
   }
  },
  "VideoPipelineAPIworkflowstatsGETD619E2C8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WorkflowOrchestratorFunction392225F6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIworkflowstats8D21DFA1"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/workflow/stats/GET/Resource"
   }
  },
  "VideoPipelineAPImedia35396386": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VideoPipelineAPIC7F4C465",
      "RootResourceId"
     ]
    },
    "PathPart": "media",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/Resource"
   }
  },
  "VideoPipelineAPImediaOPTIONS8E5C0B35": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPImedia35396386"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPImediasearchB1B7B691": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPImedia35396386"
    },
    "PathPart": "search",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/search/Resource"
   }
  },
  "VideoPipelineAPImediasearchOPTIONS834783F5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPImediasearchB1B7B691"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/search/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPImediasearchPOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTmediasearchE08D3ABE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MediaCuratorFunction9523771D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/media/search"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/search/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..media.search"
   }
  },
  "VideoPipelineAPImediasearchPOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTmediasearch9DD80F0A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MediaCuratorFunction9523771D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/media/search"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/search/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..media.search"
   }
  },
  "VideoPipelineAPImediasearchPOST31739D32": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MediaCuratorFunction9523771D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPImediasearchB1B7B691"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/search/POST/Resource"
   }
  },
  "VideoPipelineAPImediacurateCF64791B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPImedia35396386"
    },
    "PathPart": "curate",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/curate/Resource"
   }
  },
  "VideoPipelineAPImediacurateOPTIONS86FC4F7E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPImediacurateCF64791B"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/curate/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPImediacuratePOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTmediacurateE138D04C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MediaCuratorFunction9523771D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/media/curate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/curate/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..media.curate"
   }
  },
  "VideoPipelineAPImediacuratePOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTmediacurate346B9586": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MediaCuratorFunction9523771D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/media/curate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/curate/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..media.curate"
   }
  },
  "VideoPipelineAPImediacuratePOSTE36DB332": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MediaCuratorFunction9523771D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPImediacurateCF64791B"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/media/curate/POST/Resource"
   }
  },
  "VideoPipelineAPIvideo0162E1A2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VideoPipelineAPIC7F4C465",
      "RootResourceId"
     ]
    },
    "PathPart": "video",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/Resource"
   }
  },
  "VideoPipelineAPIvideoOPTIONS18D47EDD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIvideo0162E1A2"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIvideoassemble41D0E80E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIvideo0162E1A2"
    },
    "PathPart": "assemble",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/assemble/Resource"
   }
  },
  "VideoPipelineAPIvideoassembleOPTIONSAC256661": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIvideoassemble41D0E80E"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/assemble/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIvideoassemblePOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTvideoassemble58CD156D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VideoAssemblerFunction398C3D15",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/video/assemble"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/assemble/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..video.assemble"
   }
  },
  "VideoPipelineAPIvideoassemblePOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTvideoassemble5A7E54E7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VideoAssemblerFunction398C3D15",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/video/assemble"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/assemble/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..video.assemble"
   }
  },
  "VideoPipelineAPIvideoassemblePOSTE138099D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "VideoAssemblerFunction398C3D15",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIvideoassemble41D0E80E"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/assemble/POST/Resource"
   }
  },
  "VideoPipelineAPIvideopublishA7E982F4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "VideoPipelineAPIvideo0162E1A2"
    },
    "PathPart": "publish",
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/publish/Resource"
   }
  },
  "VideoPipelineAPIvideopublishOPTIONSA418EEFD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoPipelineAPIvideopublishA7E982F4"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/publish/OPTIONS/Resource"
   }
  },
  "VideoPipelineAPIvideopublishPOSTApiPermissionVideoPipelineStackVideoPipelineAPI7A2C3071POSTvideopublishF8CDA179": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "YouTubePublisherFunction16400ECB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/",
       {
        "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
       },
       "/POST/video/publish"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/publish/POST/ApiPermission.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..video.publish"
   }
  },
  "VideoPipelineAPIvideopublishPOSTApiPermissionTestVideoPipelineStackVideoPipelineAPI7A2C3071POSTvideopublish04614983": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "YouTubePublisherFunction16400ECB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:786673323159:",
       {
        "Ref": "VideoPipelineAPIC7F4C465"
       },
       "/test-invoke-stage/POST/video/publish"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/publish/POST/ApiPermission.Test.VideoPipelineStackVideoPipelineAPI7A2C3071.POST..video.publish"
   }
  },
  "VideoPipelineAPIvideopublishPOST5FA37B80": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "YouTubePublisherFunction16400ECB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "VideoPipelineAPIvideopublishA7E982F4"
    },
    "RestApiId": {
     "Ref": "VideoPipelineAPIC7F4C465"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineAPI/Default/video/publish/POST/Resource"
   }
  },
  "VideoPipelineApiKey045E3C38": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Description": "API Key for Video Pipeline",
    "Enabled": true,
    "Name": "automated-video-pipeline-api-key",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineApiKey/Resource"
   }
  },
  "VideoPipelineUsagePlan03FF010A": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "VideoPipelineAPIC7F4C465"
      },
      "Stage": {
       "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
      },
      "Throttle": {}
     }
    ],
    "Description": "Usage plan for Video Pipeline API",
    "Quota": {
     "Limit": 10000,
     "Period": "MONTH"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Throttle": {
     "BurstLimit": 200,
     "RateLimit": 100
    },
    "UsagePlanName": "automated-video-pipeline-usage-plan"
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineUsagePlan/Resource"
   }
  },
  "VideoPipelineUsagePlanUsagePlanKeyResourceVideoPipelineStackVideoPipelineApiKeyE3239360D0FFB5DC": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "VideoPipelineApiKey045E3C38"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "VideoPipelineUsagePlan03FF010A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/VideoPipelineUsagePlan/UsagePlanKeyResource:VideoPipelineStackVideoPipelineApiKeyE3239360"
   }
  },
  "DailyVideoGeneration4312F863": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Trigger daily video generation",
    "Name": "automated-video-pipeline-daily-schedule",
    "ScheduleExpression": "cron(0 10 * * ? *)",
    "State": "ENABLED",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "production"
     },
     {
      "Key": "ManagedBy",
      "Value": "github-actions"
     },
     {
      "Key": "Owner",
      "Value": "video-automation-team"
     },
     {
      "Key": "Project",
      "Value": "automated-video-pipeline"
     }
    ],
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WorkflowOrchestratorFunction392225F6",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/DailyVideoGeneration/Resource"
   }
  },
  "DailyVideoGenerationAllowEventRuleVideoPipelineStackWorkflowOrchestratorFunctionB0F126A75E7BEC73": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorkflowOrchestratorFunction392225F6",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "DailyVideoGeneration4312F863",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/DailyVideoGeneration/AllowEventRuleVideoPipelineStackWorkflowOrchestratorFunctionB0F126A7"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QQW/CMAyFf8vuwWPltCNs2oWhobLtitzWlECaVHUCqqL89ylp0Ji0k7+XZzn2K6B4eob5A155VjfnmZIV+J3F+izwynvPC/ArV5/JipeDzjSVFTIF0YwaO9NU4D+xUhS7EgQhsQNfmukt1a1Rsh6jnCgIhV3VIPh3HGn4poGl0dH/o9+crm027nlLQyc5tgTBiz0yk2VYxiLYUn/IvZwusrTB+ih1WudeB4G9bNHSFUfwJbFd9jLtnPGVemXGjnTK4E7tLLa3cS2Jkti4oaYYjNiQPZommplubp488bKXa0qJZPpibGmrMB34v1jTGARdSFsGX7qcr1MUwu8nKYW4ltRt9D+c7Z0NQpuG4MSPl6KAYg7zhxNLORuctrIjKKf6A5MS9HwVAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "VideoPipelineStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VideoPipelineAPIEndpointCE683195": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VideoPipelineAPIC7F4C465"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
      },
      "/"
     ]
    ]
   }
  },
  "PrimaryBucketName": {
   "Description": "Primary S3 bucket for video assets",
   "Value": {
    "Ref": "PrimaryBucket2E757879"
   }
  },
  "APIEndpoint": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VideoPipelineAPIC7F4C465"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VideoPipelineAPIDeploymentStageprod938D37FF"
      },
      "/"
     ]
    ]
   }
  },
  "APIKeyId": {
   "Description": "API Key ID for authentication",
   "Value": {
    "Ref": "VideoPipelineApiKey045E3C38"
   }
  },
  "StateMachineArn": {
   "Description": "Step Functions state machine ARN",
   "Value": {
    "Ref": "VideoPipelineStateMachine25F8993E"
   }
  },
  "TopicsTableName": {
   "Description": "DynamoDB topics table name",
   "Value": {
    "Ref": "TopicsTableB8A0263C"
   }
  },
  "VideosTableName": {
   "Description": "DynamoDB videos table name",
   "Value": {
    "Ref": "VideosTable19B3D0C4"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}